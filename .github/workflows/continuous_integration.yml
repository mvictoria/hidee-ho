name: continuous integration

on: 
  push:
    paths:
      - '**.py'
      - 'pyproject.toml'
      - 'poetry.lock'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-0  # increment to reset cache
      
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: load cached venv
        id: cached-venv
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: install package
        if: steps.cached-venv.outputs.cached-hit != 'true'
        run: |
          poetry install --no-interaction

      - name: linting
        run: |
          source .venv/bin/activate
          black . --check
          ruff .

      - name: test
        run: |
          source .venv/bin/activate
          pytest --cov